@{
    ViewData["Title"] = "Home Page";
}

@if (ViewData.ModelState.Count > 0)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}


<!DOCTYPE html>
<html>
<head>
<style>
    .campo-error {
        border-color: red !important;
    }

    .hidden {
        display: none;
    }
</style>
</head>
<body>
    <div class="container">
        <h1>Formulario de Empresas</h1>
        <form asp-action="MiMetodo" method="post" class="form">

            <div class="mb-3">
                <a href="/" id="salir" class="btn btn-primary">Nuevo</a>
                <button type="submit" id="grabar" class="btn btn-success">Grabar</button>
                <button type="button" id="eliminarEmpresaBtn" class="btn btn-danger">Eliminar Empresa</button>
                <button type="button" id="buscarPorCodigo" class="btn btn-warning">Modo Consulta</button>
                <a href="/" id="salir" class="btn btn-secondary">Salir</a>
            </div>

            <div class="mb-3">
                <label for="codigo" class="form-label">Código:</label>
                <input type="text" id="codigo" name="codigo" class="form-control" readonly>
            </div>

            <div class="mb-3">
                <label for="ruc" class="form-label">RUC:</label>
                <input type="text" id="ruc" name="ruc" class="form-control" required oninput="validarRuc(this)">
            </div>

            <div class="mb-3">
                <label for="razon_social" class="form-label">Razón Social:</label>
                <input type="text" id="razon_social" name="razon_social" class="form-control" required>
            </div>

            <div class="mb-3">
                <label class="form-label">Estado:</label>
                <div class="form-check">
                    <input type="radio" id="activo" name="estado" value="activo" class="form-check-input" required>
                    <label for="activo" class="form-check-label">Activo</label>
                </div>
                <div class="form-check">
                    <input type="radio" id="inactivo" name="estado" value="inactivo" class="form-check-input" required>
                    <label for="inactivo" class="form-check-label">Inactivo</label>
                </div>
            </div>
            <h2>Direcciones de la Empresa:</h2>
            <div class="mb-3" id="seccionDirecciones">
                <table id="grillaDirecciones" class="table dataTable">
                    <thead>
                        <tr>
                            <th>Dirección</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <input type="text" name="direcciones" class="form-control" />
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger">Eliminar</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="mb-3">
                    <button type="button" id="agregarDireccion" class="btn btn-primary">Agregar Dirección</button>
                </div>

            </div>

            <table id="tablaDirecciones" class="hidden" >
                <thead>
                    <tr>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>


        </form>
    </div>

    <script>

        function validarRuc(input) {
            if (!/^\d{1,11}$/.test(input.value)) {
                input.classList.add("campo-error");
            } else {
                input.classList.remove("campo-error");
            }
        }

        function agregarDireccion() {
            const tablaDirecciones = document.getElementById("grillaDirecciones").getElementsByTagName("tbody")[0];
            const filaOriginal = document.querySelector("#grillaDirecciones tbody tr");

            const nuevaFila = filaOriginal.cloneNode(true);

            const inputDireccion = nuevaFila.querySelector("input");
            inputDireccion.value = "";

            tablaDirecciones.appendChild(nuevaFila);
        }

        document.getElementById("agregarDireccion").addEventListener("click", agregarDireccion);

        function setInputsReadOnly(readonly) {
            const inputs = document.querySelectorAll("input:not(#codigo)");
            inputs.forEach(input => {
                input.readOnly = readonly;
            });
        }


        document.getElementById("buscarPorCodigo").addEventListener("click", function () {

            document.getElementById("codigo").readOnly = false;
            const codigoBusqueda = document.getElementById("codigo").value;

            fetch(`/Home/BuscarPorCodigo?codigo=${codigoBusqueda}`)
                .then(response => response.json())
                .then(data => {
                    if (data) {
                        document.getElementById("codigo").value = data.codigo;
                        document.getElementById("ruc").value = data.ruc;
                        document.getElementById("razon_social").value = data.razon_social;
                        document.querySelector(`input[name=estado][value=${data.estado}]`).checked = true;

                        document.getElementById("seccionDirecciones").style.display = "none";
                        document.getElementById("tablaDirecciones").classList.remove("hidden");


                        setInputsReadOnly(true);


                        debugger;
                        const tablaDirecciones = $("#tablaDirecciones tbody");
                        tablaDirecciones.empty();
                        if (data.direcciones && data.direcciones.length > 0) {
                            data.direcciones.forEach(direccion => {
                                const fila = $("<tr>");
                                fila.append($("<td>").text(direccion));
                                tablaDirecciones.append(fila);
                            });
                        }

                    }
                })
                .catch(error => {
                    console.error("Error al realizar la búsqueda:", error);
                });
        });

        document.getElementById("eliminarEmpresaBtn").addEventListener("click", function () {
            debugger;
            document.getElementById("codigo").readOnly = false;
            const codigoEliminar = document.getElementById("codigo").value;
            


            fetch(`/Home/EliminarEmpresa?codigo=${codigoEliminar}`, {
                method: "DELETE",
            })
                .then(response => {
                    if (response.ok) {
                        
                    } else {
                        console.error("Error al eliminar la empresa.");
                    }
                })
                .catch(error => {
                    console.error("Error al realizar la solicitud de eliminación:", error);
                });
        });


    </script>

</body>
</html>
